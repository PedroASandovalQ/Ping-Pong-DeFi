export declare const cometConstants: {
    moveToParentClass: {
        Comet: string;
        MAINNET_USDC: string;
        COMP: string;
        WBTC: string;
        WETH: string;
        UNI: string;
        LINK: string;
        USDC: string;
        MAINNET_WETH: string;
        cbETH: string;
        wstETH: string;
        POLYGON_USDC: string;
        WMATIC: string;
        MaticX: string;
        ARBITRUM_USDC: string;
        ARB: string;
        GMX: string;
        BASE_USDBC: string;
        USDbC: string;
        BASE_WETH: string;
        GOERLI_USDC: string;
        GOERLI_WETH: string;
        MUMBAI_USDC: string;
        DAI: string;
        GOERLI_ARBITRUM_USDC: string;
        GOERLI_OPTIMISM_USDC: string;
        OP: string;
        GOERLI_BASE_USDC: string;
        GOERLI_BASE_WETH: string;
        FUJI_USDC: string;
        WBTC_e: string;
        WAVAX: string;
    };
    address: {
        mainnet_usdc: {
            COMP: {
                contract: string;
                priceFeed: string;
            };
            WBTC: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            UNI: {
                contract: string;
                priceFeed: string;
            };
            LINK: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        mainnet_weth: {
            cbETH: {
                contract: string;
                priceFeed: string;
            };
            wstETH: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        polygon_usdc: {
            WETH: {
                contract: string;
                priceFeed: string;
            };
            WBTC: {
                contract: string;
                priceFeed: string;
            };
            WMATIC: {
                contract: string;
                priceFeed: string;
            };
            MaticX: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        arbitrum_usdc: {
            ARB: {
                contract: string;
                priceFeed: string;
            };
            GMX: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            WBTC: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        base_usdbc: {
            cbETH: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            USDbC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        base_weth: {
            cbETH: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        goerli_usdc: {
            COMP: {
                contract: string;
                priceFeed: string;
            };
            WBTC: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            LINK: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        goerli_weth: {
            cbETH: {
                contract: string;
                priceFeed: string;
            };
            wstETH: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        mumbai_usdc: {
            DAI: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            WBTC: {
                contract: string;
                priceFeed: string;
            };
            WMATIC: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        goerli_arbitrum_usdc: {
            LINK: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            WBTC: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        goerli_optimism_usdc: {
            OP: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            WBTC: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        goerli_base_usdc: {
            cbETH: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        goerli_base_weth: {
            cbETH: {
                contract: string;
                priceFeed: string;
            };
            WETH: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
        fuji_usdc: {
            WBTC_e: {
                contract: string;
                priceFeed: string;
            };
            WAVAX: {
                contract: string;
                priceFeed: string;
            };
            USDC: {
                contract: string;
                priceFeed: string;
            };
            Comet: string;
        };
    };
    decimals: {
        mainnet_usdc: {
            COMP: number;
            WBTC: number;
            WETH: number;
            UNI: number;
            LINK: number;
            USDC: number;
        };
        mainnet_weth: {
            cbETH: number;
            wstETH: number;
            WETH: number;
        };
        polygon_usdc: {
            WETH: number;
            WBTC: number;
            WMATIC: number;
            MaticX: number;
            USDC: number;
        };
        arbitrum_usdc: {
            ARB: number;
            GMX: number;
            WETH: number;
            WBTC: number;
            USDC: number;
        };
        base_usdbc: {
            cbETH: number;
            WETH: number;
            USDbC: number;
        };
        base_weth: {
            cbETH: number;
            WETH: number;
        };
        goerli_usdc: {
            COMP: number;
            WBTC: number;
            WETH: number;
            LINK: number;
            USDC: number;
        };
        goerli_weth: {
            cbETH: number;
            wstETH: number;
            WETH: number;
        };
        mumbai_usdc: {
            DAI: number;
            WETH: number;
            WBTC: number;
            WMATIC: number;
            USDC: number;
        };
        goerli_arbitrum_usdc: {
            LINK: number;
            WETH: number;
            WBTC: number;
            USDC: number;
        };
        goerli_optimism_usdc: {
            OP: number;
            WETH: number;
            WBTC: number;
            USDC: number;
        };
        goerli_base_usdc: {
            cbETH: number;
            WETH: number;
            USDC: number;
        };
        goerli_base_weth: {
            cbETH: number;
            WETH: number;
        };
        fuji_usdc: {
            WBTC_e: number;
            WAVAX: number;
            USDC: number;
        };
    };
    collaterals: {
        mainnet_usdc: string[];
        mainnet_weth: string[];
        polygon_usdc: string[];
        arbitrum_usdc: string[];
        base_usdbc: string[];
        base_weth: string[];
        goerli_usdc: string[];
        goerli_weth: string[];
        mumbai_usdc: string[];
        goerli_arbitrum_usdc: string[];
        goerli_optimism_usdc: string[];
        goerli_base_usdc: string[];
        goerli_base_weth: string[];
        fuji_usdc: string[];
    };
    base: {
        mainnet_usdc: string;
        mainnet_weth: string;
        polygon_usdc: string;
        arbitrum_usdc: string;
        base_usdbc: string;
        base_weth: string;
        goerli_usdc: string;
        goerli_weth: string;
        mumbai_usdc: string;
        goerli_arbitrum_usdc: string;
        goerli_optimism_usdc: string;
        goerli_base_usdc: string;
        goerli_base_weth: string;
        fuji_usdc: string;
    };
    instanceNetworkMap: {
        mainnet_usdc: string;
        mainnet_weth: string;
        polygon_usdc: string;
        arbitrum_usdc: string;
        base_usdbc: string;
        base_weth: string;
        goerli_usdc: string;
        goerli_weth: string;
        mumbai_usdc: string;
        goerli_arbitrum_usdc: string;
        goerli_optimism_usdc: string;
        goerli_base_usdc: string;
        goerli_base_weth: string;
        fuji_usdc: string;
    };
    abi: ({
        inputs: any[];
        name: string;
        type: string;
        anonymous?: undefined;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
};
export declare const constants: {
    PriceFeed: string;
    Maximillion: string;
    CompoundLens: string;
    GovernorBravo: string;
    Comet: string;
    Comptroller: string;
    Reservoir: string;
    LINK: string;
    BTC: string;
    cAAVE: string;
    cBAT: string;
    cCOMP: string;
    cDAI: string;
    cETH: string;
    cFEI: string;
    cLINK: string;
    cMKR: string;
    cREP: string;
    cSAI: string;
    cSUSHI: string;
    cTUSD: string;
    cUNI: string;
    cUSDC: string;
    cUSDP: string;
    cUSDT: string;
    cWBTC: string;
    cYFI: string;
    cZRX: string;
    AAVE: string;
    BAT: string;
    COMP: string;
    DAI: string;
    ETH: string;
    FEI: string;
    MKR: string;
    REP: string;
    SAI: string;
    SUSHI: string;
    TUSD: string;
    UNI: string;
    USDC: string;
    USDP: string;
    USDT: string;
    WBTC: string;
    YFI: string;
    ZRX: string;
};
export declare const address: {
    mainnet: {
        PriceFeed: string;
        Maximillion: string;
        CompoundLens: string;
        GovernorBravo: string;
        Comptroller: string;
        Reservoir: string;
        AAVE: string;
        COMP: string;
        cAAVE: string;
        cBAT: string;
        cCOMP: string;
        cDAI: string;
        cETH: string;
        cFEI: string;
        cLINK: string;
        cMKR: string;
        cREP: string;
        cSAI: string;
        cSUSHI: string;
        cTUSD: string;
        cUNI: string;
        cUSDC: string;
        cUSDP: string;
        cUSDT: string;
        cWBTC: string;
        cYFI: string;
        cZRX: string;
        BAT: string;
        DAI: string;
        FEI: string;
        LINK: string;
        MKR: string;
        REP: string;
        SAI: string;
        SUSHI: string;
        TUSD: string;
        UNI: string;
        USDC: string;
        USDP: string;
        USDT: string;
        WBTC: string;
        YFI: string;
        ZRX: string;
    };
    goerli: {
        PriceFeed: string;
        Maximillion: string;
        CompoundLens: string;
        GovernorAlpha: string;
        Comptroller: string;
        Reservoir: string;
        COMP: string;
        cBAT: string;
        cDAI: string;
        cETH: string;
        cREP: string;
        cSAI: string;
        cUSDC: string;
        cUSDT: string;
        cWBTC: string;
        cZRX: string;
        BAT: string;
        DAI: string;
        REP: string;
        SAI: string;
        USDC: string;
        USDT: string;
        WBTC: string;
        ZRX: string;
    };
};
export declare const abi: {
    Erc20: ({
        constant: boolean;
        inputs: {
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            name: string;
            type: string;
        }[];
        payable: boolean;
        type: string;
        anonymous?: undefined;
    } | {
        inputs: any[];
        payable: boolean;
        type: string;
        constant?: undefined;
        name?: undefined;
        outputs?: undefined;
        anonymous?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        constant?: undefined;
        outputs?: undefined;
        payable?: undefined;
    })[];
    cErc20: ({
        constant: boolean;
        inputs: {
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        anonymous?: undefined;
    } | {
        inputs: {
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        constant?: undefined;
        name?: undefined;
        outputs?: undefined;
        anonymous?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        signature: string;
        constant?: undefined;
        outputs?: undefined;
        payable?: undefined;
        stateMutability?: undefined;
    })[];
    cEther: ({
        constant: boolean;
        inputs: {
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        anonymous?: undefined;
    } | {
        inputs: {
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        constant?: undefined;
        name?: undefined;
        outputs?: undefined;
        anonymous?: undefined;
    } | {
        payable: boolean;
        stateMutability: string;
        type: string;
        constant?: undefined;
        inputs?: undefined;
        name?: undefined;
        outputs?: undefined;
        signature?: undefined;
        anonymous?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        signature: string;
        constant?: undefined;
        outputs?: undefined;
        payable?: undefined;
        stateMutability?: undefined;
    })[];
    COMP: ({
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        anonymous?: undefined;
        name?: undefined;
        constant?: undefined;
        outputs?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        signature: string;
        payable?: undefined;
        stateMutability?: undefined;
        constant?: undefined;
        outputs?: undefined;
    } | {
        constant: boolean;
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        anonymous?: undefined;
    })[];
    GovernorBravo: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        constant?: undefined;
        outputs?: undefined;
        payable?: undefined;
        stateMutability?: undefined;
    } | {
        constant: boolean;
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    } | {
        constant: boolean;
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    Comptroller: ({
        constant: boolean;
        inputs: {
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        anonymous?: undefined;
    } | {
        inputs: any[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        constant?: undefined;
        name?: undefined;
        outputs?: undefined;
        anonymous?: undefined;
    } | {
        payable: boolean;
        stateMutability: string;
        type: string;
        constant?: undefined;
        inputs?: undefined;
        name?: undefined;
        outputs?: undefined;
        signature?: undefined;
        anonymous?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        signature: string;
        constant?: undefined;
        outputs?: undefined;
        payable?: undefined;
        stateMutability?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        signature: string;
        constant?: undefined;
        outputs?: undefined;
        payable?: undefined;
        stateMutability?: undefined;
    } | {
        constant: boolean;
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
        signature: string;
        anonymous?: undefined;
    })[];
    PriceFeed: string[];
    CompoundLens: {
        constant: boolean;
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        payable: boolean;
        stateMutability: string;
        type: string;
    }[];
    Comet: ({
        inputs: any[];
        name: string;
        type: string;
        anonymous?: undefined;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            components: {
                internalType: string;
                name: string;
                type: string;
            }[];
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
};
export declare const cTokens: string[];
export declare const underlyings: string[];
export declare const opfAssets: string[];
export declare const decimals: {
    cAAVE: number;
    cBAT: number;
    cCOMP: number;
    cDAI: number;
    cETH: number;
    cFEI: number;
    cLINK: number;
    cMKR: number;
    cREP: number;
    cSAI: number;
    cSUSHI: number;
    cTUSD: number;
    cUNI: number;
    cUSDC: number;
    cUSDP: number;
    cUSDT: number;
    cWBTC: number;
    cYFI: number;
    cZRX: number;
    AAVE: number;
    BAT: number;
    BTC: number;
    COMP: number;
    DAI: number;
    ETH: number;
    FEI: number;
    LINK: number;
    MKR: number;
    REP: number;
    SAI: number;
    SUSHI: number;
    TUSD: number;
    UNI: number;
    USDC: number;
    USDP: number;
    USDT: number;
    WBTC: number;
    YFI: number;
    ZRX: number;
};
